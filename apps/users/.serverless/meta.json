{
  "C:\\Users\\nsrbu\\OneDrive\\Desktop\\praksa-finalni-projekat\\Backend\\backend\\apps\\users": {
    "versionSfCore": null,
    "versionFramework": "4.1.2",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "users",
            "plugins": [
              "serverless-dynamodb",
              "serverless-offline"
            ],
            "custom": {
              "serverless-offline": {
                "httpPort": 3003,
                "lambdaPort": 3005
              },
              "serverless-dynamodb": {
                "start": {
                  "port": 8000,
                  "docker": false,
                  "seed": true,
                  "migrate": true
                },
                "seed": {
                  "users": {
                    "sources": [
                      {
                        "table": "users",
                        "sources": [
                          "./seed/users.json"
                        ]
                      }
                    ]
                  },
                  "specializations": {
                    "sources": [
                      {
                        "table": "specializations",
                        "sources": [
                          "./seed/specializations.json"
                        ]
                      }
                    ]
                  },
                  "trainers": {
                    "sources": [
                      {
                        "table": "trainers",
                        "sources": [
                          "./seed/trainers.json"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "functions": {
              "register": {
                "handler": "dist/lambdas/register.register",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "auth/register",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-register"
              },
              "login": {
                "handler": "dist/lambdas/login.login",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "auth/login",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-login"
              },
              "getMe": {
                "handler": "dist/lambdas/get-me.getMe",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "users/me",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-getMe"
              },
              "deleteUser": {
                "handler": "dist/lambdas/delete-user.deleteUser",
                "events": [
                  {
                    "http": {
                      "method": "delete",
                      "path": "users/me",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-deleteUser"
              },
              "uploadPhoto": {
                "handler": "dist/lambdas/upload-photo.uploadPhoto",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "users/upload-photo",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-uploadPhoto"
              },
              "updatePassword": "<REDACTED>",
              "getSpecializations": {
                "handler": "dist/lambdas/get-specializations.getSpecializations",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "users/specializations",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-getSpecializations"
              }
            },
            "provider": {
              "name": "aws",
              "region": "eu-central-1",
              "runtime": "nodejs18.x",
              "stage": "dev",
              "environment": {
                "DYNAMODB_TABLE": "users-dev"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": "arn:aws:dynamodb:us-east-1:471112551028:table/users"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "arn:aws:s3:::lambda-dependency-bucket",
                        "arn:aws:s3:::lambda-dependency-bucket/*"
                      ]
                    }
                  ]
                }
              },
              "versionFunctions": true
            },
            "package": {
              "excludeDevDependencies": true,
              "patterns": [
                "!src/**",
                "dist/**",
                "!node_modules/**",
                "!test/**"
              ],
              "artifactsS3KeyDirname": "serverless/users/dev/code-artifacts"
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "users",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "username",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "UsernameIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "username",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                },
                "SpecializationsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "specializations",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    }
                  }
                },
                "TrainersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "trainers",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "userIdIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                },
                "StudentsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "students",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "userIdIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "configFileDirPath": "C:\\Users\\nsrbu\\OneDrive\\Desktop\\praksa-finalni-projekat\\Backend\\backend\\apps\\users",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      },
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "users",
            "plugins": [
              "serverless-dynamodb",
              "serverless-offline"
            ],
            "custom": {
              "serverless-offline": {
                "httpPort": 3003,
                "lambdaPort": 3005
              },
              "serverless-dynamodb": {
                "start": {
                  "port": 8000,
                  "docker": false,
                  "seed": true,
                  "migrate": true
                },
                "seed": {
                  "users": {
                    "sources": [
                      {
                        "table": "users",
                        "sources": [
                          "./seed/users.json"
                        ]
                      }
                    ]
                  },
                  "specializations": {
                    "sources": [
                      {
                        "table": "specializations",
                        "sources": [
                          "./seed/specializations.json"
                        ]
                      }
                    ]
                  },
                  "trainers": {
                    "sources": [
                      {
                        "table": "trainers",
                        "sources": [
                          "./seed/trainers.json"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "functions": {
              "register": {
                "handler": "dist/lambdas/register.register",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "auth/register",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-register"
              },
              "login": {
                "handler": "dist/lambdas/login.login",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "auth/login",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-login"
              },
              "getMe": {
                "handler": "dist/lambdas/get-me.getMe",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "users/me",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-getMe"
              },
              "deleteUser": {
                "handler": "dist/lambdas/delete-user.deleteUser",
                "events": [
                  {
                    "http": {
                      "method": "delete",
                      "path": "users/me",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-deleteUser"
              },
              "uploadPhoto": {
                "handler": "dist/lambdas/upload-photo.uploadPhoto",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "users/upload-photo",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-uploadPhoto"
              },
              "updatePassword": "<REDACTED>",
              "getSpecializations": {
                "handler": "dist/lambdas/get-specializations.getSpecializations",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "users/specializations",
                      "cors": true
                    }
                  }
                ],
                "name": "users-dev-getSpecializations"
              }
            },
            "provider": {
              "name": "aws",
              "region": "eu-central-1",
              "runtime": "nodejs18.x",
              "stage": "dev",
              "environment": {
                "DYNAMODB_TABLE": "users-dev"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": "arn:aws:dynamodb:us-east-1:471112551028:table/users"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "arn:aws:s3:::lambda-dependency-bucket",
                        "arn:aws:s3:::lambda-dependency-bucket/*"
                      ]
                    }
                  ]
                }
              },
              "versionFunctions": true
            },
            "package": {
              "excludeDevDependencies": true,
              "patterns": [
                "!src/**",
                "dist/**",
                "!node_modules/**",
                "!test/**"
              ],
              "artifactsS3KeyDirname": "serverless/users/dev/code-artifacts"
            },
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "users",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "username",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "UsernameIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "username",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                },
                "SpecializationsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "specializations",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    }
                  }
                },
                "TrainersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "trainers",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "userIdIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                },
                "StudentsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "students",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 5,
                      "WriteCapacityUnits": 5
                    },
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "userIdIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                          "ReadCapacityUnits": 5,
                          "WriteCapacityUnits": 5
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "configFileDirPath": "C:\\Users\\nsrbu\\OneDrive\\Desktop\\praksa-finalni-projekat\\Backend\\backend\\apps\\users",
          "config": {
            "type": "opt"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\nsrbu\\OneDrive\\Desktop\\praksa-finalni-projekat\\Backend\\backend\\apps\\users",
    "serviceConfigFileName": "serverless.yaml",
    "service": {
      "service": "users",
      "plugins": [
        "serverless-dynamodb",
        "serverless-offline"
      ],
      "custom": {
        "serverless-offline": {
          "httpPort": 3003,
          "lambdaPort": 3005
        },
        "serverless-dynamodb": {
          "start": {
            "port": 8000,
            "docker": false,
            "seed": true,
            "migrate": true
          },
          "seed": {
            "users": {
              "sources": [
                {
                  "table": "users",
                  "sources": [
                    "./seed/users.json"
                  ]
                }
              ]
            },
            "specializations": {
              "sources": [
                {
                  "table": "specializations",
                  "sources": [
                    "./seed/specializations.json"
                  ]
                }
              ]
            },
            "trainers": {
              "sources": [
                {
                  "table": "trainers",
                  "sources": [
                    "./seed/trainers.json"
                  ]
                }
              ]
            }
          }
        }
      },
      "functions": {
        "register": {
          "handler": "dist/lambdas/register.register",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "auth/register",
                "cors": true
              }
            }
          ],
          "name": "users-dev-register"
        },
        "login": {
          "handler": "dist/lambdas/login.login",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "auth/login",
                "cors": true
              }
            }
          ],
          "name": "users-dev-login"
        },
        "getMe": {
          "handler": "dist/lambdas/get-me.getMe",
          "events": [
            {
              "http": {
                "method": "get",
                "path": "users/me",
                "cors": true
              }
            }
          ],
          "name": "users-dev-getMe"
        },
        "deleteUser": {
          "handler": "dist/lambdas/delete-user.deleteUser",
          "events": [
            {
              "http": {
                "method": "delete",
                "path": "users/me",
                "cors": true
              }
            }
          ],
          "name": "users-dev-deleteUser"
        },
        "uploadPhoto": {
          "handler": "dist/lambdas/upload-photo.uploadPhoto",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "users/upload-photo",
                "cors": true
              }
            }
          ],
          "name": "users-dev-uploadPhoto"
        },
        "updatePassword": "<REDACTED>",
        "getSpecializations": {
          "handler": "dist/lambdas/get-specializations.getSpecializations",
          "events": [
            {
              "http": {
                "method": "get",
                "path": "users/specializations",
                "cors": true
              }
            }
          ],
          "name": "users-dev-getSpecializations"
        }
      },
      "provider": {
        "name": "aws",
        "region": "eu-central-1",
        "runtime": "nodejs18.x",
        "stage": "dev",
        "environment": {
          "DYNAMODB_TABLE": "users-dev"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:UpdateItem"
                ],
                "Resource": "arn:aws:dynamodb:us-east-1:471112551028:table/users"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:GetObject",
                  "s3:ListBucket"
                ],
                "Resource": [
                  "arn:aws:s3:::lambda-dependency-bucket",
                  "arn:aws:s3:::lambda-dependency-bucket/*"
                ]
              }
            ]
          }
        },
        "versionFunctions": true
      },
      "package": {
        "excludeDevDependencies": true,
        "patterns": [
          "!src/**",
          "dist/**",
          "!node_modules/**",
          "!test/**"
        ],
        "artifactsS3KeyDirname": "serverless/users/dev/code-artifacts"
      },
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "users",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              },
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UsernameIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                  }
                }
              ]
            }
          },
          "SpecializationsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "specializations",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              }
            }
          },
          "TrainersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "trainers",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              },
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "userIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                  }
                }
              ]
            }
          },
          "StudentsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "students",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              },
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "userIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                  }
                }
              ]
            }
          }
        }
      }
    },
    "serviceRawFile": "service: users\r\n\r\nplugins:\r\n  - serverless-dynamodb\r\n  - serverless-offline\r\n\r\ncustom:\r\n  serverless-offline:\r\n    httpPort: 3003\r\n    lambdaPort: 3005\r\n  serverless-dynamodb:\r\n    start:\r\n      port: 8000\r\n      docker: false\r\n      seed: true\r\n      migrate: true\r\n    seed:\r\n      users:\r\n        sources:\r\n          - table: users\r\n            sources: [./seed/users.json]\r\n      specializations:\r\n        sources:\r\n          - table: specializations\r\n            sources: [./seed/specializations.json]\r\n      trainers:\r\n        sources:\r\n          - table: trainers\r\n            sources: [./seed/trainers.json]\r\n\r\nfunctions:\r\n  register:\r\n    handler: dist/lambdas/register.register\r\n    events:\r\n      - http:\r\n          method: post\r\n          path: auth/register\r\n          cors: true\r\n  login:\r\n    handler: dist/lambdas/login.login\r\n    events:\r\n      - http:\r\n          method: post\r\n          path: auth/login\r\n          cors: true\r\n  getMe:\r\n    handler: dist/lambdas/get-me.getMe\r\n    events:\r\n      - http:\r\n          method: get\r\n          path: users/me\r\n          cors: true\r\n  deleteUser:\r\n    handler: dist/lambdas/delete-user.deleteUser\r\n    events:\r\n      - http:\r\n          method: delete\r\n          path: users/me\r\n          cors: true\r\n  uploadPhoto:\r\n    handler: dist/lambdas/upload-photo.uploadPhoto\r\n    events:\r\n      - http:\r\n          method: post\r\n          path: users/upload-photo\r\n          cors: true\r\n  updatePassword:\r\n    handler: dist/lambdas/update-password.updatePassword\r\n    events:\r\n      - http:\r\n          method: put\r\n          path: users/update-password\r\n          cors: true\r\n  getSpecializations:\r\n    handler: dist/lambdas/get-specializations.getSpecializations\r\n    events:\r\n      - http:\r\n          method: get\r\n          path: users/specializations\r\n          cors: true\r\n\r\nprovider:\r\n  name: aws\r\n  region: eu-central-1\r\n  runtime: nodejs18.x\r\n  stage: dev\r\n  environment:\r\n    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:Query\r\n            - dynamodb:Scan\r\n            - dynamodb:GetItem\r\n            - dynamodb:UpdateItem\r\n          Resource:\r\n            - 'arn:aws:dynamodb:us-east-1:471112551028:table/users'\r\n        - Effect: Allow\r\n          Action:\r\n            - s3:PutObject\r\n            - s3:GetObject\r\n            - s3:ListBucket\r\n          Resource:\r\n            - 'arn:aws:s3:::lambda-dependency-bucket'\r\n            - 'arn:aws:s3:::lambda-dependency-bucket/*'\r\n\r\npackage:\r\n  excludeDevDependencies: true\r\n  patterns:\r\n    - '!src/**'\r\n    - dist/**\r\n    - '!node_modules/**'\r\n    - '!test/**'\r\n\r\nresources:\r\n  Resources:\r\n    UsersTable:\r\n      Type: 'AWS::DynamoDB::Table'\r\n      Properties:\r\n        TableName: users\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n          - AttributeName: username\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        ProvisionedThroughput:\r\n          ReadCapacityUnits: 5\r\n          WriteCapacityUnits: 5\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: UsernameIndex\r\n            KeySchema:\r\n              - AttributeName: username\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n            ProvisionedThroughput:\r\n              ReadCapacityUnits: 5\r\n              WriteCapacityUnits: 5\r\n    SpecializationsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: specializations\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        ProvisionedThroughput:\r\n          ReadCapacityUnits: 5\r\n          WriteCapacityUnits: 5\r\n\r\n    TrainersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: trainers\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        ProvisionedThroughput:\r\n          ReadCapacityUnits: 5\r\n          WriteCapacityUnits: 5\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: userIdIndex\r\n            KeySchema:\r\n              - AttributeName: userId\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n            ProvisionedThroughput:\r\n              ReadCapacityUnits: 5\r\n              WriteCapacityUnits: 5\r\n    StudentsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: students\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        ProvisionedThroughput:\r\n          ReadCapacityUnits: 5\r\n          WriteCapacityUnits: 5\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: userIdIndex\r\n            KeySchema:\r\n              - AttributeName: userId\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL\r\n            ProvisionedThroughput:\r\n              ReadCapacityUnits: 5\r\n              WriteCapacityUnits: 5\r\n",
    "command": [
      "dynamodb",
      "start"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "b6f70bfef0296e3c56f5878dc8bb87ee",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "b89a915c-56c2-4719-9db3-29c4ded9708c",
    "orgName": "nikolasrbulovic",
    "userId": "5m2GT5TsG4BPCzVfYq",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "nikolasrbulovic",
    "subscription": null,
    "userEmail": "n.srbulovic@hotmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "471112551028",
    "versionSf": "4.1.2",
    "serviceProviderAwsCfStackName": "users-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-central-1:471112551028:stack/users-dev/c95d9c80-2253-11ef-a132-0638f46663cd",
    "serviceProviderAwsCfStackCreated": "2024-06-04T09:21:12.861Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-10T14:09:12.962Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_ROLLBACK_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "LambdaLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-central-1:471112551028:function:users-dev-lambda:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-users-dev-LambdaLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://qcj0qs5oaj.execute-api.eu-central-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-users-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "users-dev-serverlessdeploymentbucket-gdr8bknzzmwy",
        "ExportName": "sls-users-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}